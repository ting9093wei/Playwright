{"name": "test_positive_login", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for navigation to \"https://practicetestautomation.com/logged-in-successfully/\" until 'load'\n============================================================", "trace": "page = <Page url='https://practicetestautomation.com/practice-test-login/'>\n\n    def test_positive_login(page : Page):\n        \"\"\"Test case for successful login with correct credentials.\"\"\"\n        with allure.step(\"Step 1: Open login page and verify URL\"):\n            page.goto(\"https://practicetestautomation.com/practice-test-login/\")\n            assert \"practice-test-login\" in page.url, \"Page did not load correctly\"\n    \n        with allure.step(\"Step 2: Login with correct username and password\"):\n            page.fill(TestLocators.username, \"student\")\n            page.fill(TestLocators.password, \"Password\")\n            page.click(TestLocators.submit_button)\n    \n        with allure.step(\"Step 3: Verify successful login by checking URL\"):\n>           page.wait_for_url(\"https://practicetestautomation.com/logged-in-successfully/\")\n\npytest\\test_login.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:9145: in wait_for_url\n    self._sync(\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_page.py:584: in wait_for_url\n    return await self._main_frame.wait_for_url(**locals_to_params(locals()))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_frame.py:235: in wait_for_url\n    async with self.expect_navigation(\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_event_context_manager.py:33: in __aexit__\n    await self._future\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    async def continuation() -> Optional[Response]:\n>       event = await waiter.result()\n                ^^^^^^^^^^^^^^^^^^^^^\nE       playwright._impl._errors.TimeoutError: Timeout 30000ms exceeded.\nE       =========================== logs ===========================\nE       waiting for navigation to \"https://practicetestautomation.com/logged-in-successfully/\" until 'load'\nE       ============================================================\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_frame.py:209: TimeoutError"}, "description": "Test case for successful login with correct credentials.", "steps": [{"name": "Step 1: Open login page and verify URL", "status": "passed", "start": 1753787946064, "stop": 1753787947451}, {"name": "Step 2: Login with correct username and password", "status": "passed", "start": 1753787947451, "stop": 1753787947514}, {"name": "Step 3: Verify successful login by checking URL", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for navigation to \"https://practicetestautomation.com/logged-in-successfully/\" until 'load'\n============================================================\n", "trace": "  File \"C:\\Users\\ting9\\OneDrive\\Desktop\\Playwright\\pytest\\test_login.py\", line 35, in test_positive_login\n    page.wait_for_url(\"https://practicetestautomation.com/logged-in-successfully/\")\n    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\ting9\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\sync_api\\_generated.py\", line 9145, in wait_for_url\n    self._sync(\n    ~~~~~~~~~~^\n        self._impl_obj.wait_for_url(\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n            url=self._wrap_handler(url), waitUntil=wait_until, timeout=timeout\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        )\n        ^\n    )\n    ^\n  File \"C:\\Users\\ting9\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_sync_base.py\", line 115, in _sync\n    return task.result()\n           ~~~~~~~~~~~^^\n  File \"C:\\Users\\ting9\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_page.py\", line 584, in wait_for_url\n    return await self._main_frame.wait_for_url(**locals_to_params(locals()))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\ting9\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_frame.py\", line 235, in wait_for_url\n    async with self.expect_navigation(\n               ~~~~~~~~~~~~~~~~~~~~~~^\n        url=url, waitUntil=waitUntil, timeout=timeout\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ):\n    ^\n  File \"C:\\Users\\ting9\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_event_context_manager.py\", line 33, in __aexit__\n    await self._future\n  File \"C:\\Users\\ting9\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_frame.py\", line 209, in continuation\n    event = await waiter.result()\n            ^^^^^^^^^^^^^^^^^^^^^\n"}, "start": 1753787947514, "stop": 1753787977532}], "start": 1753787946064, "stop": 1753787977544, "uuid": "93814380-f6d9-4833-899a-9f0120c490e9", "historyId": "b47f069a6df90e89f58a32815dd74985", "testCaseId": "b47f069a6df90e89f58a32815dd74985", "fullName": "pytest.test_login#test_positive_login", "labels": [{"name": "parentSuite", "value": "pytest"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "DESKTOP-D6NB06D"}, {"name": "thread", "value": "16684-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "pytest.test_login"}], "titlePath": ["pytest", "test_login.py"]}